<project name="imap2exchange" default="dist" basedir=".">
    <description>
        builds imap2exchange.
    </description>
    <!-- set global properties for this build -->
    <property name="src"        location="src"/>
    <property name="build"      location="build" />
    <property name="app.build"  location="${build}/imap2exchange" />
    <property name="dist"       location="dist"/>
    <property name="lib"        location="lib"/>
    <property name="config"     location="config"/>
    <property name="wsdl"       location="wsdl" />
    <property name="server"     location="server" />
    <property name="server.build" location="${build}/imap2exchange-server" />

    <!-- Include relevant properties for deploying the webapp -->
    <property file="tomcat.properties" />

    <!-- Configure the custom Ant tasks for the Manager application -->
    <taskdef name="deploy"      classname="org.apache.catalina.ant.DeployTask" />
    <taskdef name="list"        classname="org.apache.catalina.ant.ListTask" />
    <taskdef name="reload"      classname="org.apache.catalina.ant.ReloadTask" />
    <taskdef name="start"       classname="org.apache.catalina.ant.StartTask" />
    <taskdef name="stop"        classname="org.apache.catalina.ant.StopTask" />
    <taskdef name="undeploy"    classname="org.apache.catalina.ant.UndeployTask" />

    <target name="init">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${app.build}" />
    </target>

    <target name="compile" depends="init"
        description="compile the source " >
        <!-- Compile the java code from ${src} into ${app.build} -->
        <javac 
            srcdir="${src}" 
            destdir="${app.build}" 
            debug="true" >
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${server}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>

    </target>

    <target name="dist" depends="compile"
        description="generate the distribution" >
        <!-- Create the distribution directories -->
        <mkdir dir="${dist}"/>
        <mkdir dir="${dist}/logs"/>

        <copy todir="${dist}">
            <fileset dir="${app.build}">
                <exclude name="**/*.swp"/>
            </fileset>
        </copy>
        <copy todir="${dist}/lib">
            <fileset dir="${lib}">
                <exclude name="**/*.swp"/>
            </fileset>
        </copy>
        <copy todir="${dist}/config">
            <fileset dir="${config}">
                <exclude name="**/*.swp"/>
            </fileset>
            <fileset dir="${wsdl}">
                <exclude name="**/*.swp" />
            </fileset>
        </copy>
        <copy todir="${dist}">
            <fileset dir="bin">
                <exclude name="**/*.swp"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="dist"
        description="Create the JAR file for imap2exchange.">
        <mkdir dir="${dist}/lib"/>
        <jar 
            destfile="${dist}/lib/imap2exchange-1.2.8-jmu.jar"
            basedir="${app.build}"
        />
    </target>

    <target name="clean"
        description="clean up" >
        <!-- Delete the ${app.build}, ${dist}, and ${doc} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${doc}"/>
    </target>

    <target name="build-server" depends="jar" 
        description="Build imap2exchange-server">

        <mkdir dir="${server.build}" />
        <mkdir dir="${server.build}/WEB-INF/classes" />
        <mkdir dir="${server.build}/WEB-INF/lib" />

        <copy todir="${server.build}">
            <fileset dir="${server}/webapp" />
            <fileset dir="${wsdl}" />
        </copy>

        <copy todir="${server.build}/WEB-INF" >
            <fileset dir="${config}">
                <exclude name="**/log4j*.*"/>
            </fileset>
        </copy>

        <copy todir="${server.build}/WEB-INF/lib">
            <fileset dir="${server}/lib">
                <exclude name="**/servlet*.jar" />
            </fileset>
            <fileset dir="${dist}/lib" />
        </copy>

        <javac 
            sourcepath=""
            srcdir="${server}/src" 
            destdir="${server.build}/WEB-INF/classes" 
            debug="true" >
            <classpath>
                <fileset dir="${server.build}/WEB-INF/lib">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${server}/lib">
                    <include name="**/servlet*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="war" depends="build-server" 
        description="Build the imap2exchange-server.war file" >
        <war destfile="${dist}/imap2exchange-server.war"
             webxml="${server.build}/WEB-INF/web.xml">
            <fileset dir="${server.build}">
                <include name="**/*.*"/>
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <!-- The following targets are to control Tomcat, etc. -->
    <target name="deploy" description="Deploy imap2exchange-server"
        depends="war">
        <deploy 
            url="${server.url}" 
            username="${server.username}" 
            password="${server.password}"
            path="${server.path}"
            war="file:${dist}/imap2exchange-server.war" />
    </target>

    <target name="undeploy" description="Undeploy imap2exchange-server">
        <!--
        <undeploy 
            url="${server.url}" 
            username="${server.username}"
            password="${server.password}"
            path="${server.path}" />
        -->
    </target>

    <target name="reload" description="Reload imap2exchange-server">
        <reload
            url="${server.url}" 
            username="${server.username}"
            password="${server.password}"
            path="${server.path}" />
    </target>

    <target name="redeploy" description="Redeploy imap2exchange-server"
        depends="undeploy">
        <antcall target="deploy"/>
    </target>
</project>
